# .bash_ps1

# PS1 color for capable terminals only
colors=$(/usr/bin/tput colors 2>/dev/null)
if [ "${colors:-0}" -ge "8" ]; then
    __ps1_color_off=$(tput sgr0)
    __ps1_color_grey=$(tput bold; tput setaf 0)
    __ps1_color_yellow=$(tput bold; tput setaf 3)
    __ps1_color_red=$(tput bold ; tput setaf 1)
    __ps1_color_white=$(tput bold ; tput setaf 7)
    __ps1_color_green=$(tput bold ; tput setaf 2)
else
    __ps1_color_off=""
    __ps1_color_grey=""
    __ps1_color_yellow=""
    __ps1_color_red=""
    __ps1_color_white=""
    __ps1_color_green=""
fi

__ps1_update() # set PS1 quick and dirty
{
    # Call this in PROMPT_COMMAND to update PS1:
    # (view) (master=) user@host:~
    # !255 $

    local retval=$?
    local git
    local usercolor

    PS1="\n"

    if [ -n "${VIRTUAL_ENV:-}" ]
    then
        PS1="${PS1}@ \[$__ps1_color_white\]$(basename\
            $VIRTUAL_ENV)\[$__ps1_color_off\] "
    fi

    if [ -n "${CLEARCASE_ROOT:-}" ]
    then
        PS1="${PS1}\[$__ps1_color_white\]$(basename ${CLEARCASE_ROOT})\[$__ps1_color_off\] "
    fi

    if declare -f __git_ps1 >/dev/null
    then
        PS1=${PS1}$(__git_ps1 "(%s) ")
    fi

    # make username red if superuser
    if [ ${EUID:-1} -eq 0 ]
    then
        usercolor=$__ps1_color_red
    else
        usercolor=$__ps1_color_green
    fi
    PS1="${PS1}\[$usercolor\]\u\[$__ps1_color_grey\]@\[$__ps1_color_green\]\h"
    PS1="${PS1}\[$__ps1_color_grey\]:\[$__ps1_color_yellow\]\w\[$__ps1_color_off\] "

    # prompt will be red if previous command failed
    if [ $retval -gt 0 ]
    then
        PS1="${PS1}\[$__ps1_color_red\]!$retval "
    fi
    PS1="$PS1\[$__ps1_color_off\]\$ "

    export PS1
}

export PROMPT_COMMAND="__ps1_update"

# vim:ft=sh:nowrap
